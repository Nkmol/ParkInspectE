<UserControl x:Class="ParkInspect.View.UserControls.ContactpersonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:validationrules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:convertor="clr-namespace:ParkInspect.Convertor"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1000"
             VerticalAlignment="Top"
             x:Name="Window"
             DataContext="{Binding Contactpersons, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <convertor:VisibilityConverter x:Key="VisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <TabControl>
        <TabItem Header="Overzicht"
                 Visibility="{Binding Dashboard.TabStatus[27], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*" />
                    <ColumnDefinition Width="477*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <UniformGrid Rows="1" Grid.ColumnSpan="2">
                    <TextBox materialDesign:HintAssist.Hint="Zoek op voornaam"
                             Text="{Binding FirstnameFilter, UpdateSourceTrigger=PropertyChanged}" Margin="0,3" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op achternaam"
                             Text="{Binding LastnameFilter, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,0,3" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op klant"
                             Text="{Binding ClientFilter, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,0,3" />
                </UniformGrid>
                <DataGrid
                    ItemsSource="{Binding Contactpersons}"
                    SelectedItem="{Binding SelectedContactperson}"
                    IsReadOnly="True" AutoGenerateColumns="False" Grid.ColumnSpan="2" Margin="0,30,0.4,0.4"
                    Grid.RowSpan="2" VerticalScrollBarVisibility="Visible">

                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="Voornaam" Binding="{Binding Firstname}" />
                        <DataGridTextColumn Width="*" Header="Achternaam" Binding="{Binding Lastname}" />
                        <DataGridTextColumn Width="*" Header="Klant" Binding="{Binding Client.name}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>

        <TabItem Header="Management"
                 Visibility="{Binding Dashboard.TabStatus[28], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}"
                 DataContext="{Binding SelectedContactperson}">
            <Border Padding="10">
                <StackPanel>
                    <Label Content="Contactpersoon" FontSize="18" />
                    <Separator Margin="0,2,0,10" />
                    <Label x:Name="FirstnameLabel" Content="Voornaam" />
                    <AdornerDecorator>
                        <TextBox x:Name="Firstname" HorizontalAlignment="Left" Margin="5,0,0,15" Width="250">
                            <TextBox.Text>
                                <Binding Path="FormFirstname" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue"
                                                                                  ValidatesOnTargetUpdated="True" />
                                        <validationrules:IsNotIntegerValidationRule
                                            ValidationStep="RawProposedValue"
                                            ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </AdornerDecorator>
                    <Label x:Name="LastnameLabel" Content="Achternaam" />
                    <AdornerDecorator>
                        <TextBox x:Name="Lastname" HorizontalAlignment="Left" Margin="5,0,0,15" Width="250">
                            <TextBox.Text>
                                <Binding Path="FormLastname" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue"
                                                                                  ValidatesOnTargetUpdated="True" />
                                        <validationrules:IsNotIntegerValidationRule
                                            ValidationStep="RawProposedValue"
                                            ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </AdornerDecorator>
                    <Label x:Name="ClientLabel" Content="Klant" />
                    <AdornerDecorator>
                        <ComboBox x:Name="Client" SelectedItem="{Binding FormClient}"
                                  ItemsSource="{Binding Global.Clients, Source={StaticResource Locator}}"
                                  DisplayMemberPath="name" HorizontalAlignment="Left" Margin="5,0,0,15" Width="250">
                            <ComboBox.Text>
                                <Binding Path="FormClient" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue"
                                                                                  ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.Text>
                        </ComboBox>
                    </AdornerDecorator>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding SaveCommand, UpdateSourceTrigger=PropertyChanged}"
                                CommandParameter="{Binding DataContext, ElementName=Window}"
                                Content="Sla klant op" Margin="540,0,10,0"
                                VerticalAlignment="Top" Width="120">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Firstname}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Lastname}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Client}"
                                                    Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button DataContext="{Binding Contactpersons, Source={StaticResource Locator}}"
                                Command="{Binding NewCommand}" Content="Reset" Margin="0,0,0,0"
                                VerticalAlignment="Top" Width="120" />
                        <Button Command="{Binding DeleteCommand}" IsEnabled="{Binding CanDelete}"
                                CommandParameter="{Binding DataContext, ElementName=Window}" Content="Verwijder"
                                Margin="10,0,0,0"
                                VerticalAlignment="Top" Width="120" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </TabItem>
    </TabControl>
</UserControl>