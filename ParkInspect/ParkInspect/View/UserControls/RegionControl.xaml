<UserControl x:Class="ParkInspect.View.UserControls.RegionControl"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:convertor="clr-namespace:ParkInspect.Convertor"
             xmlns:validationRules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Height="Auto"
             Width="Auto"
             DataContext="{Binding Region, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <convertor:VisibilityConverter x:Key="VisibilityConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <TabControl Margin="0,0,-0.2,0">
            <TabItem Header="Overview" Visibility="{Binding Dashboard.TabStatus[11], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}">
                <ScrollViewer>
                    <StackPanel>
                        <Label Name="SearchLabel">Zoeken</Label>
                        <Grid Name="FilterGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <TextBox materialDesign:HintAssist.Hint="Zoek in regio's" Grid.Column="0" Name="RegionFilter" Margin="0,0,5,10" HorizontalAlignment="Stretch" Text="{Binding RegionFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                        </Grid>
                        <DataGrid SelectedItem="{Binding SelectedRegion}" ItemsSource="{Binding Regions}" IsReadOnly="True"  AutoGenerateColumns="False" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Regio" Binding="{Binding name}"  />
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Command="{Binding DeleteRegionCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Width="120" Content="Verwijderen"/>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem  Header="Regio invoeren">
                <Grid>
                    <StackPanel>
                        <Label x:Name="label" Content="Regio"/>
                        <TextBox Width="250" HorizontalAlignment="Left" Name="Regionname">
                            <TextBox.Text>
                                <Binding Path="NewRegion.name" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Button Command="{Binding SaveNewRegionCommand}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,20,0,0" Width="120" Content="Opslaan">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (Validation.HasError), ElementName=Regionname}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
