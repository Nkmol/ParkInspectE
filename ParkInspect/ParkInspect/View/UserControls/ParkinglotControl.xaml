<UserControl x:Class="ParkInspect.View.UserControls.ParkeerplaatsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:validationrules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:convertor="clr-namespace:ParkInspect.Convertor"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="1000"
             x:Name="Window"
             DataContext="{Binding Parkinglots, Source={StaticResource Locator}}" 
             VerticalAlignment="Top">
    <UserControl.Resources>
        <convertor:VisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>
    <TabControl Name="Tabs">
        <TabItem Header="Overzicht" Visibility="{Binding Dashboard.TabStatus[23], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <!-- Datagrid row -->
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Name="SearchLabel">Zoeken</Label>
                <UniformGrid Grid.Row="1" Name="FilterGrid" Rows="1">
                    <TextBox materialDesign:HintAssist.Hint="Zoek in naam" Name="NameFilter" Margin="0,0,5,10" Text="{Binding NameFilter, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox materialDesign:HintAssist.Hint="Zoek in postcode" Name="ZipFilter" Margin="0,0,5,10" Text="{Binding ZipFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek in nummer" Name="NumberFilter" Margin="0,0,5,10" Text="{Binding NumberFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek in regio" Name="RegionFilter" Margin="0,0,5,10" Text="{Binding RegionFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek in verduidelijking" Name="ClarificationFilter" Margin="0,0,5,10" Text="{Binding ClarificationFilter, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
                <DataGrid Grid.Row="2"  Name="DataGrid" AutoGenerateColumns="False" ItemsSource="{Binding Parkinglots}" SelectedItem="{Binding SelectedParkinglot}" IsReadOnly="True" MouseDoubleClick="Update">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Naam" Width="1*" Binding="{Binding Name}" />
                        <DataGridTextColumn Header="Postcode" Width="1*" Binding="{Binding Zipcode}" />
                        <DataGridTextColumn Header="Nummber" Width="1*" Binding="{Binding Number}" />
                        <DataGridTextColumn Header="Regio" Width="1*" Binding="{Binding Region}" />
                        <DataGridTextColumn Header="Verduidelijking" Width="1*" Binding="{Binding Clarification}" />
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="3" x:Name="ExportButton" Content="Export Data" PreviewMouseDown="Unselect"
					        Command="{Binding ExportCommand, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
					        Margin="0,10,0,0" VerticalAlignment="Top" />
            </Grid>
        </TabItem>
        <TabItem Header="Management" Visibility="{Binding Dashboard.TabStatus[24], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}" DataContext="{Binding SelectedParkinglot}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="173*"/>
                    <ColumnDefinition Width="821*"/>
                </Grid.ColumnDefinitions>
                <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="255" Height="250" Margin="100,0,0,0" Grid.ColumnSpan="2">
                    <StackPanel>
                        <Label Content="Naam" />
                        <TextBox x:Name="NameBox" Margin="5,0,0,10" Width="250">
                            <TextBox.Text>
                                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label Content="Postcode" />
                        <TextBox x:Name="ZipBox" Margin="5,0,0,10" Width="250">
                            <TextBox.Text>
                                <Binding Path="Zipcode" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        <validationrules:IsValidZipCodeValidationRule ValidationStep="ConvertedProposedValue"
											                                              ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="Regio" />
                        <ComboBox x:Name="RegionBox" ItemsSource="{Binding Regions}" DisplayMemberPath="Name" SelectedValuePath="Name"
							          Width="255" Margin="5,0,0,10">
                            <ComboBox.Text>
                                <Binding Path="Region" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.Text>
                        </ComboBox>
                    </StackPanel>
                </DockPanel>
                <DockPanel HorizontalAlignment="Right" VerticalAlignment="Top" Width="255" Height="250" Margin="0,0,100,0" Grid.Column="1">
                    <StackPanel>
                        <Label x:Name="NumberLabel" Content="Nummer" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <TextBox x:Name="NumberBox" Width="255" Margin="5,0,0,10">
                            <TextBox.Text>
                                <Binding Path="Number" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:StringToIntValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        <validationrules:IsPositiveNumberRule ValidationStep="ConvertedProposedValue"
											                                      ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label Content="Verduidelijking" />
                        <TextBox x:Name="ClarificationBox" HorizontalAlignment="Left" Height="121" TextWrapping="Wrap" AcceptsReturn="True"
							         Text="{Binding Clarification, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="255"
							         Margin="5,0,0,0" />
                    </StackPanel>
                </DockPanel>
                <StackPanel Margin="100,255,100,0" Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Column="0">
                    <Label x:Name="MessageLabel" Content="{Binding Message}" Width="300" Height="50" VerticalAlignment="Top" />
                    <Button x:Name="SaveButton2" Command="{Binding SaveCommand}" CommandParameter="{Binding DataContext, ElementName=Window}" 
                            Content="Voeg toe" VerticalAlignment="Top" Margin="110,0,10,0" Width="120">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ZipBox, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=NameBox, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=NumberBox, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=RegionBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="NewButton" Content="Bewerken" Command="{Binding EditCommand}" VerticalAlignment="Top" Width="120" Margin="0,0,10,0" />
                    <Button x:Name="DeselectButton" Content="Deselecteren" HorizontalAlignment="Left" Margin="0,0,0,0" Command="{Binding DataContext.NewCommand, ElementName=Window}" VerticalAlignment="Top" Width="120" />
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>