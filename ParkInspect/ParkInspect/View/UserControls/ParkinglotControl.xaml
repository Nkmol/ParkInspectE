<UserControl x:Class="ParkInspect.View.UserControls.ParkeerplaatsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:validationrules="clr-namespace:ParkInspect.Model.ValidationRules"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             DataContext="{Binding Parkinglots, Source={StaticResource Locator}}">
    <Grid>
        <TabControl Name="Tabs">
            <TabItem Header="Overview">
                <DataGrid Name="DataGrid" AutoGenerateColumns="False" ItemsSource="{Binding Parkinglots, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Parkinglot}" IsReadOnly="True" MouseDoubleClick="Update">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding name}" />
                        <DataGridTextColumn Header="Zip code" Binding="{Binding zipcode}" />
                        <DataGridTextColumn Header="Number" Binding="{Binding number}" />
                        <DataGridTextColumn Header="Region" Binding="{Binding region_name}" />
                        <DataGridTextColumn Header="Clarification" Binding="{Binding clarification}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Management">

                <Grid>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="248*"/>
                        <ColumnDefinition Width="269*"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Row="0" Grid.Column="0">
                        <Label x:Name="NameLabel" Content="Name:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Label x:Name="ZipLabel" Content="ZIP Code:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Label x:Name="RegioLabel" Content="Regio:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Label x:Name="NumberLabel" Content="Number:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Label x:Name="ClarificationLabel" Content="Clarification:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="1">
                        <TextBox x:Name="NameBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="190" >
                            <TextBox.Text>
                                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>


                        <TextBox x:Name="ZipBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="190" >
                            <TextBox.Text>
                                <Binding Path="Zip" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <ComboBox x:Name="RegionBox" ItemsSource="{Binding Regions}" DisplayMemberPath="name" SelectedValuePath="name" SelectedValue="{Binding Region, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="190"/>

                        <TextBox x:Name="NumberBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="190">
                            <TextBox.Text>
                                <Binding Path="Number" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:StringToIntValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox x:Name="ClarificationBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Clarification, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="190"/>

                        <Button x:Name="SaveButton2" Command="{Binding SaveCommand, UpdateSourceTrigger=PropertyChanged}"  Content="Save Parkinglot" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,10,0,0" Width="274">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=ZipBox, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=NameBox, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=NumberBox, Path=(Validation.HasError)}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--<Button x:Name="SaveButton" Content="Save Parkinglot" Command="{Binding SaveCommand, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,10,0,0" Width="274"/>-->
                        <Button x:Name="NewButton" Content="New Parkinglot" PreviewMouseDown="Unselect" Command="{Binding NewCommand, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Width="274"/>
                        <Label x:Name="MessageLabel" Content="{Binding Message}" HorizontalAlignment="Left" Margin="0,10,0,0"/>
                    </StackPanel>

                </Grid>
                

            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
