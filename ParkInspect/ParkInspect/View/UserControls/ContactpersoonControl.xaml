<UserControl x:Class="ParkInspect.View.UserControls.ContactpersoonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:validationrules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1000"
             VerticalAlignment="Top"
             DataContext="{Binding Contactperson, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <TabControl>
        <TabItem Header="Overview">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <UniformGrid Rows="1" Grid.Row="0">
                    <TextBox materialDesign:HintAssist.Hint="Zoek in voornaam"
                             materialDesign:HintAssist.IsFloating="True"
                             Text="{Binding FirstnameFilter, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,3" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek in achternaam"
                             materialDesign:HintAssist.IsFloating="True"
                             Text="{Binding LastnameFilter, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,0,3" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek in klant"
                             materialDesign:HintAssist.IsFloating="True"
                             Text="{Binding ClientFilter, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,0,3" />
                </UniformGrid>
                <DataGrid ItemsSource="{Binding Contactpersons, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedContactperson}"
                          IsReadOnly="True" AutoGenerateColumns="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="Voornaam" Binding="{Binding firstname}" />
                        <DataGridTextColumn Width="*" Header="Achternaam" Binding="{Binding lastname}" />
                        <DataGridTextColumn Width="*" Header="Klant" Binding="{Binding Client.name}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>

        <TabItem Header="Management">
            <Border Padding="10">
                <StackPanel>
                    <TextBox materialDesign:HintAssist.Hint="Vul de voornaam in"
                             materialDesign:HintAssist.IsFloating="True">
                        <TextBox.Text>
                            <Binding Path="Firstname" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationrules:IsValidNameValidationRule
                                        ValidationStep="ConvertedProposedValue"
                                        ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox materialDesign:HintAssist.Hint="Vul de achternaam in"
                             materialDesign:HintAssist.IsFloating="True">
                        <TextBox.Text>
                            <Binding Path="Lastname" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationrules:IsValidNameValidationRule
                                        ValidationStep="ConvertedProposedValue"
                                        ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <ComboBox materialDesign:HintAssist.Hint="Kies een klant uit"
                              materialDesign:HintAssist.IsFloating="True"
                              DataContext="{Binding Contactperson, Source={StaticResource Locator}}"
                              ItemsSource="{Binding Clients}" DisplayMemberPath="name"
                              SelectedItem="{Binding SelectedClient}">
                        <ComboBox.Text>
                            <Binding Path="SelectedClient.name" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue"
                                                                              ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>
                    <StackPanel>
                        <UniformGrid Rows="1">
                        <Button Command="{Binding SaveCommand, UpdateSourceTrigger=PropertyChanged}"
                                Content="Opslaan" Margin="0,10,10,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding ElementName=Firstname, Path=(Validation.HasError)}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding ElementName=Lastname, Path=(Validation.HasError)}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding ElementName=Customer, Path=(Validation.HasError)}"
                                                    Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Command="{Binding DeleteContactpersonCommand}" Content="Verwijderen" Margin="0,10,0,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Firstname}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Lastname}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Customer}"
                                                    Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        </UniformGrid>
                        <Button Command="{Binding ResetButtonCommand}" Content="Scherm legen" Margin="0,10,0,0" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </TabItem>
    </TabControl>
</UserControl>