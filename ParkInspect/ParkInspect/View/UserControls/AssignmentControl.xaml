<UserControl x:Class="ParkInspect.View.UserControls.AssignmentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:convertor="clr-namespace:ParkInspect.Convertor"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:validationRules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             DataContext="{Binding Assignment, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <convertor:VisibilityConverter x:Key="VisibilityConverter" />
    </UserControl.Resources>

    <Grid Margin="0,0,-677,-185">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="24*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <TabControl HorizontalAlignment="Left" VerticalAlignment="Top"
                    Visibility="{Binding Dashboard.TabStatus[13], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}"
                    Height="486" Margin="0,0,-684,-186" Width="984" Grid.ColumnSpan="2">
            <TabItem Header="Overzicht">
                <StackPanel>
                    <DockPanel>

                        <TextBox Width="162" Margin="0,3"
                                 Text="{Binding ClientFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="189" Margin="5,3,0,3"
                                 Text="{Binding StateFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="180" Margin="5,3,0,3"
                                 Text="{Binding DateFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="186" Margin="5,3,0,3"
                                 Text="{Binding DeadlineFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="229" Margin="5,3,0,3"
                                 Text="{Binding ClarificationFilter, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalAlignment="Left" />
                    </DockPanel>

                    <!-- na het wijzigen van een item, is het niet mogelijk het gewijzigde item met een klik te selecteren.-->
                    <DataGrid Width="969" ItemsSource="{Binding Assignments}"
                              SelectedItem="{Binding SelectedAssignment}"
                              AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Height="401"
                              Margin="0,0,-2,0"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Klant Naam" Width="*"
                                                Binding="{Binding Client.name, Mode=OneWay}" />
                            <DataGridTextColumn Header="Status" Width="*" Binding="{Binding state, Mode=OneWay}" />
                            <DataGridTextColumn Header="Aangemaakt" Width="*"
                                                Binding="{Binding date, StringFormat={}{0:dd/MM/yyyy}, Mode=OneWay}" />
                            <DataGridTextColumn Header="Deadline" Width="*"
                                                Binding="{Binding deadline, StringFormat={}{0:dd/MM/yyyy}, Mode=OneWay}" />
                            <DataGridTextColumn Header="Toelichting" Width="*" Binding="{Binding clarification}" />


                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>

            </TabItem>
            <TabItem Header="Management" Margin="-1,0,1,0"
                     Visibility="{Binding Dashboard.TabStatus[13], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}">
                <DockPanel>
                    <StackPanel Width="300" Height="454">
                        <Label Height="25" Margin="10,0,151,0" Content="Aangemaakt" />
                        <DatePicker Margin="10,0,57,0" x:Name="DateStart">
                            <DatePicker.SelectedDate>
                                <Binding Path="SelectedAssignment.date">
                                    <Binding.ValidationRules>
                                        <validationRules:IsNotEmptyValidationRule />
                                        <validationRules:IsValidDateTimeRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                        <Label Height="25" Margin="10,5,151,0" Content="Deadline" />
                        <controls:DateTimePicker Margin="10,0,57,0" x:Name="DateEnd" IsClockVisible="False"
                                                 Background="Transparent" Culture="en-US">
                            <controls:DateTimePicker.SelectedDate>
                                <Binding Path="SelectedAssignment.deadline" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationRules:IsNotEmptyValidationRule />
                                        <validationRules:IsValidDateTimeRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </controls:DateTimePicker.SelectedDate>
                        </controls:DateTimePicker>
                        <Label Height="25" Margin="10,5,151,0" Content="Status" />
                        <ComboBox Height="25" Margin="10,0,57,0" Text="{Binding SelectedAssignment.state}"
                                  ItemsSource="{Binding States}" DisplayMemberPath="state1"
                                  x:Name="cbState">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedAssignment.State1">
                                    <Binding.ValidationRules>
                                        <validationRules:IsNotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>
                        <Label Height="25" Margin="10,5,151,0" Content="Klant" />
                        <ComboBox Margin="10,0,57,0" Text="{Binding SelectedAssignment.Client.name}"
                                  ItemsSource="{Binding Clients}" DisplayMemberPath="name" x:Name="cbClient">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedAssignment.Client">
                                    <Binding.ValidationRules>
                                        <validationRules:IsNotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>
                        <Label Height="25" Margin="10,5,151,0" Content="Toelichting" />
                        <TextBox Name="Clarificationbox" Margin="10,0,57,0" Height="83"
                                 Text="{Binding SelectedAssignment.clarification}" AcceptsReturn="True"
                                 TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
                        <Label Height="27" Foreground="Red" Content="{Binding CommandError}" FontSize="12"
                               Margin="10,0,24,0" Background="{x:Null}" />
                        <DockPanel Width="243" HorizontalAlignment="Left">
                            <Button Margin="5,0" Content="Bewerken" Command="{Binding EditAsignmentCommand}"
                                    Width="102" HorizontalAlignment="Left">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding ElementName=DateStart, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=DateEnd, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=cbState, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=cbClient, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Margin="5,0" Content="Toevoegen" Command="{Binding CreateAsignmentCommand}"
                                    Width="113" HorizontalAlignment="Left">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding ElementName=DateStart, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=DateEnd, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=cbState, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding ElementName=cbClient, Path=(Validation.HasError)}"
                                                        Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DockPanel>
                    </StackPanel>

                    <StackPanel Width="215" />
                    <StackPanel Height="435" Width="380">

                        <GroupBox x:Name="Inspecties" Header="Toegekende inspecties" Margin="0,5,0,0" Height="204"
                                  Width="363" HorizontalAlignment="Left">
                            <DataGrid IsReadOnly="True" ItemsSource="{Binding SelectedAssignment.Inspections}"
                                      SelectedItem="{Binding SelectedInspection}" AutoGenerateColumns="False"
                                      Margin="0,0,-2,0"
                                      ScrollViewer.CanContentScroll="True"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Parkeerplaats" Width="*"
                                                        Binding="{Binding Parkinglot.name}" />
                                    <DataGridTextColumn Header="Datum" Width="*" Binding="{Binding date}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>

                       <Label Height="111" Foreground="Red" Content="{Binding CommandError}" FontSize="8"
                               RenderTransformOrigin="0.5,0.5" Margin="-1,0,1,0">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform AngleX="-1.447" />
                                    <RotateTransform />
                                    <TranslateTransform X="-0.796" />
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>
                        <Button Content="Leeg Scherm" Command="{Binding ResetCommand}" Width="135"
                                HorizontalAlignment="Left" />
                        <Button Content="Nieuwe inspectie" Margin="0,-33,20,0" Width="150"
                                Command="{Binding NewInspectionCommand}" HorizontalAlignment="Right" Height="33" />
                    </StackPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>