<UserControl x:Class="ParkInspect.View.UserControls.AbsenceControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:validationrules="clr-namespace:ParkInspect.Model.ValidationRules"
             mc:Ignorable="d" 
             Height="Auto" Width="Auto"
             DataContext="{Binding Absence, Source={StaticResource Locator}}">



    <Grid>

        <TabControl Margin="0,0,-0.2,0">
            <TabItem Header="Overview">
                <ScrollViewer>
                    <StackPanel>

                        <Label Name="SearchLabel">
                            Search:
                        </Label>

                        <Grid Name="FilterGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" Name="NameFilter" HorizontalAlignment="Stretch" Text="{Binding StartDateFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBox Grid.Column="1" Name="EnddateFilter" HorizontalAlignment="Stretch" Text="{Binding EndDateFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBox Grid.Column="2" Name="SurnameFilter" HorizontalAlignment="Stretch" Text="{Binding SurnameFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBox Grid.Column="3" Name="LastnameFilter" HorizontalAlignment="Stretch" Text="{Binding LastNameFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBox Grid.Column="4" Name="IDFilter" HorizontalAlignment="Stretch" Text="{Binding IDFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        </Grid>
                        <DataGrid SelectedItem="{Binding SelectedAbsence}" ItemsSource="{Binding Absences}" IsReadOnly="True"  AutoGenerateColumns="False" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Start Datum" Width="1*" Binding="{Binding start}"  />
                                <DataGridTextColumn Header="Eind Datum" Width="1*" Binding="{Binding end}" />
                                <DataGridTextColumn Header="Voornaam" Width="1*" Binding="{Binding Employee.firstname}"/>
                                <DataGridTextColumn Header="Achternaam" Width="1*" Binding="{Binding Employee.lastname}"/>
                                <DataGridTextColumn Header="ID" Width="1*" Binding="{Binding employee_id}"/>

                            </DataGrid.Columns>
                        </DataGrid>

                        <Button Command="{Binding DeleteAbsenceCommand}" x:Name="button1" Content="Verwijder" HorizontalAlignment="Left" Margin="330,219,0,0" VerticalAlignment="Top" Width="125"/>
                        
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem  Header="Afwezigheid invoeren">

                <ScrollViewer>
                    <StackPanel>

                        <Label x:Name="label" Content="Begin Datum" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <DatePicker x:Name="beginDate">
                            <DatePicker.SelectedDate>
                                <Binding Path="NewAbsence.start" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                        <Label x:Name="label2" Content="Eind Datum" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                        <!--<DatePicker  SelectedDate="{Binding NewAbsence.end}">-->
                        <DatePicker x:Name="endDate">
                            <DatePicker.SelectedDate>
                                <Binding Path="NewAbsence.end" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                        <DockPanel>
                            <ComboBox Name="EmployeeBox" ItemsSource="{Binding Employees}" SelectedValue="{Binding SelectedEmployee}" DisplayMemberPath="firstname" >
                                <ComboBox.Text>
                                    <Binding Path="SelectedEmployee" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationrules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>


                            <TextBlock DataContext="{Binding Absence, Source={StaticResource Locator}}" Text="{Binding Notification, Mode=TwoWay}"></TextBlock>
                        </DockPanel>
                        <Button Command="{Binding SaveNewAbsenceCommand}" x:Name="Button"  Content="Voeg toe" HorizontalAlignment="Left" Margin="330,219,0,0" VerticalAlignment="Top" Width="120"  >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=EmployeeBox, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=beginDate, Path=(Validation.HasError)}" Value="false"/>
                                                <Condition Binding="{Binding ElementName=endDate, Path=(Validation.HasError)}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                        </Button>


                    </StackPanel>
                </ScrollViewer>
            </TabItem>


        </TabControl>
    </Grid>
</UserControl>
