<UserControl x:Class="ParkInspect.View.UserControls.EmployeeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:validationRules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:convertor="clr-namespace:ParkInspect.Convertor"
             mc:Ignorable="d"
             d:DesignHeight="670"
             d:DesignWidth="1000"
             VerticalAlignment="Top"
             Name="Window"
             DataContext="{Binding Employees, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <convertor:VisibilityConverter x:Key="VisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <TabControl>
        <TabItem Header="Overzicht">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <UniformGrid Rows="1" Grid.Row="0">
                    <TextBox materialDesign:HintAssist.Hint="Zoek op voornaam"
                             materialDesign:HintAssist.IsFloating="True" Margin="0,3"
                             Text="{Binding FirstNameFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op achternaam"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding LastNameFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op telefoonnummer"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding PhoneFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op datum in dienst"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding InServiceFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op datum uit dienst"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding OutServiceFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op email"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding EmailFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op dienst"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding ActiveFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op rol"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding RoleFilter, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox materialDesign:HintAssist.Hint="Zoek op beschikbaarheid"
                             materialDesign:HintAssist.IsFloating="True" Margin="5,3,0,3"
                             Text="{Binding StatusFilter, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
                <DataGrid ItemsSource="{Binding Employees}"
                          SelectedItem="{Binding SelectedEmployee, Mode=TwoWay}"
                          IsReadOnly="True" AutoGenerateColumns="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="Voornaam" Binding="{Binding Firstname}" />
                        <DataGridTextColumn Width="*" Header="Achternaam" Binding="{Binding Lastname}" />
                        <DataGridTextColumn Width="*" Header="Telefoonnummer" Binding="{Binding Phonenumber}" />
                        <DataGridTextColumn Width="*" Header="In dienst datum" Binding="{Binding InServiceDate}" />
                        <DataGridTextColumn Width="*" Header="Uit dienst datum" Binding="{Binding OutServiceDate}" />
                        <DataGridTextColumn Width="*" Header="Emailadres" Binding="{Binding Email}" />
                        <DataGridTextColumn Width="*" Header="In dienst" Binding="{Binding Active}" />
                        <DataGridTextColumn Width="*" Header="Rol" Binding="{Binding Role.role1}" />
                        <DataGridTextColumn Width="*" Header="Status"
                                            Binding="{Binding EmployeeStatus.employee_status1}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Management" DataContext="{Binding SelectedEmployee}"
                 Visibility="{Binding Dashboard.TabStatus[18], Converter={StaticResource VisibilityConverter}, Mode=TwoWay, Source= {StaticResource Locator}}">
            <StackPanel>
                <Label Content="Personeel" FontSize="18" />
                <Separator Margin="0,2,0,10" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Border Padding="10" Grid.Column="0" Grid.RowSpan="2">
                        <StackPanel>
                            <AdornerDecorator>
                                <TextBox materialDesign:HintAssist.Hint="Voornaam"
                                         materialDesign:HintAssist.IsFloating="True" Name="FirstName">
                                    <TextBox.Text>
                                        <Binding Path="FormFirstname" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                                <validationRules:IsValidNameValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <TextBox materialDesign:HintAssist.Hint="Achternaam"
                                         materialDesign:HintAssist.IsFloating="True" Name="LastName">
                                    <TextBox.Text>
                                        <Binding Path="FormLastname" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                                <validationRules:IsValidNameValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <TextBox materialDesign:HintAssist.Hint="Email"
                                         materialDesign:HintAssist.IsFloating="True" Name="Email">
                                    <TextBox.Text>
                                        <Binding Path="FormEmail" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                                <validationRules:IsValidEmailValidationRule
                                                    ValidationStep="ConvertedProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <TextBox materialDesign:HintAssist.Hint="Telefoonnummer"
                                         materialDesign:HintAssist.IsFloating="True" Name="Phonenumber">
                                    <TextBox.Text>
                                        <Binding Path="FormPhonenumber" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                                <validationRules:IsValidPhoneNumberRule
                                                    ValidationStep="ConvertedProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <TextBox materialDesign:HintAssist.Hint="Password"
                                         materialDesign:HintAssist.IsFloating="True" Name="Password">
                                    <TextBox.Text>
                                        <Binding Path="FormPassword" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <DatePicker materialDesign:HintAssist.Hint="Datum gestart"
                                            materialDesign:HintAssist.IsFloating="True" Name="StartDate">
                                    <DatePicker.SelectedDate>
                                        <Binding Path="FormInServiceDate" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>
                                </DatePicker>
                            </AdornerDecorator>
                            <StackPanel Orientation="Horizontal" Margin="-3, 10, 0, -5">
                                <Label Content="In dienst (contract loopt nog)" />
                                <CheckBox IsChecked="{Binding FormActive}" />
                            </StackPanel>
                            <DatePicker materialDesign:HintAssist.Hint="Datum uit dienst"
                                        materialDesign:HintAssist.IsFloating="True">
                                <DatePicker.SelectedDate>
                                    <Binding Path="FormOutServiceDate" UpdateSourceTrigger="PropertyChanged" />
                                </DatePicker.SelectedDate>
                            </DatePicker>

                            <AdornerDecorator>
                                <ComboBox
                                    ItemsSource="{Binding Global.Roles, Source={StaticResource Locator}}"                                  
                                    DisplayMemberPath="role1"
                                    SelectedItem="{Binding FormRole}"
                                    materialDesign:HintAssist.Hint="Rol"
                                    materialDesign:HintAssist.IsFloating="True" Name="Role">
                                    <ComboBox.Text>
                                        <Binding Path="FormRole.role1" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                            </AdornerDecorator>
                            <AdornerDecorator>
                                <ComboBox
                                    ItemsSource="{Binding Global.EmployeeStates, Source={StaticResource Locator}}"
                                    DisplayMemberPath="employee_status1"
                                    SelectedItem="{Binding FormEmployeeStatus}"
                                    materialDesign:HintAssist.Hint="Status"
                                    materialDesign:HintAssist.IsFloating="True" Name="Status">
                                    <ComboBox.Text>
                                        <Binding Path="FormEmployeeStatus.employee_status1"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule
                                                    ValidationStep="RawProposedValue"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                            </AdornerDecorator>
                        </StackPanel>
                    </Border>
                    <GroupBox Header="Afwezigheden" Grid.Column="1">
                        <DataGrid ScrollViewer.CanContentScroll="True"
                                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                  SelectionMode="Single" AutoGenerateColumns="False"
                                  IsReadOnly="True" ItemsSource="{Binding FormAbsences}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="Datum begin" Binding="{Binding start}" />
                                <DataGridTextColumn Width="*" Header="Datum einde" Binding="{Binding end}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                    <StackPanel Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="0">

                        <Button
                            Command="{Binding SaveCommand}" Content="Opslaan" Margin="0,10,0.4,0" CommandParameter="{Binding DataContext, ElementName=Window}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=FirstName}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=LastName}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Email}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Phonenumber}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=StartDate}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Password}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Role}"
                                                    Value="false" />
                                                <Condition
                                                    Binding="{Binding (Validation.HasError), ElementName=Status}"
                                                    Value="false" />
                                                <Condition 
                                                    Binding="{Binding CanSave}"
                                                    Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button DataContext="{Binding Employees, Source={StaticResource Locator}}"
                                Command="{Binding NewCommand}"
                                Content="Scherm legen" Margin="0,10,0,0" />
                    </StackPanel>
                    <ComboBox
                        ItemsSource="{Binding Global.Regions, Source={StaticResource Locator}}"
                        DisplayMemberPath="name"
                        IsEnabled="{Binding InspectorSelected, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding FormRegion}"
                        materialDesign:HintAssist.Hint="Regio"
                        materialDesign:HintAssist.IsFloating="True" Name="RegioBox" Grid.Column="1"
                        Margin="45.4,55.2,201.4,133.8" Grid.Row="1" Width="250">
                        <ComboBox.Text>
                            <Binding Path="FormRegion.name" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue"
                                                                              ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>
                </Grid>
            </StackPanel>
        </TabItem>
    </TabControl>
</UserControl>