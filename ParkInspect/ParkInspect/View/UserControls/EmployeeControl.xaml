<UserControl x:Class="ParkInspect.View.UserControls.EmployeeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParkInspect.View.UserControls"
             xmlns:validationRules="clr-namespace:ParkInspect.Model.ValidationRules"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             Width="1000"
             Height="600"
             DataContext="{Binding Employees, Source={StaticResource Locator}}">
    <Grid>
        <TabControl>
            <TabItem Header="Overzicht">
                <StackPanel>
                    <Label Name="SearchLabel">Zoeken in voornaam (eerste veld) en/of achternaam (tweede veld)</Label>
                    <Grid Name="FilterGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <TextBox controls:TextBoxHelper.Watermark="Zoek in voornaam" Grid.Column="0" Name="NameFilter" Margin="0,0,5,10" HorizontalAlignment="Stretch" Text="{Binding FirstNameFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <TextBox controls:TextBoxHelper.Watermark="Zoek in achternaam" Grid.Column="1" Name="ZipFilter" Margin="0,0,5,10" HorizontalAlignment="Stretch" Text="{Binding LastNameFilter, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </Grid>
                    <DataGrid ScrollViewer.CanContentScroll="True" VerticalAlignment="Top"
                                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                                  SelectionMode="Single" AutoGenerateColumns="False" 
                                  IsReadOnly="True" Height="500" ItemsSource="{Binding Employees}" 
                                  SelectedItem="{Binding SelectedEmployee, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Voornaam" Binding="{Binding firstname}"  />
                            <DataGridTextColumn Header="Achternaam" Binding="{Binding lastname}" />
                            <DataGridTextColumn Header="Telefoonnummer" Binding="{Binding phonenumber}"/>
                            <DataGridTextColumn Header="In dienst" Binding="{Binding in_service_date, StringFormat={}{0:dd/MM/yyyy}}" />
                            <DataGridTextColumn Header="Uit dienst" Binding="{Binding out_service_date, StringFormat={}{0:dd/MM/yyyy}}"/>
                            <DataGridTextColumn Header="Emailadres" Binding="{Binding email}"  />
                            <DataGridTextColumn Header="Actief" Binding="{Binding active}" />
                            <DataGridTextColumn Header="Rol" Binding="{Binding role}"/>
                            <DataGridTextColumn Header="Status" Binding="{Binding employee_status}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Management" DataContext="{Binding SelectedEmployee}">
                <Grid>
                    <DockPanel Height="310" Width="255" Margin="100,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <StackPanel>
                            <Label Content="Voornaam" />
                            <TextBox Name="fname" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" MaxLength="50">
                                <TextBox.Text>
                                    <Binding Path="firstname" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                              </TextBox>

                            <Label Content="Achternaam"/>
                            <TextBox Name="lname" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" MaxLength="50">
                                <TextBox.Text>
                                    <Binding Path="lastname" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Content="Emailadres"/>
                            <TextBox Name="email" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" MaxLength="50">
                                <TextBox.Text>
                                        <Binding Path="email" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                                <validationRules:IsValidEmailValidationRule ValidationStep="ConvertedProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>

                            <Label Content="Telefoonnummer" />
                            <TextBox Name="phone" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" MaxLength="50">
                                <TextBox.Text>
                                    <Binding Path="phonenumber" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                            <validationRules:IsValidPhoneNumberRule ValidationStep="ConvertedProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Content="Wachtwoord" />
                            <TextBox Name="pass" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" MaxLength="50">
                                <TextBox.Text>
                                    <Binding Path="password" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Height="310" Width="255" Margin="0,0,100,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <StackPanel>
                            <Label Content="Datum in dienst" />
                            <DatePicker Name="start_date" Width="250" HorizontalAlignment="Left"
            	                    Margin="5,0,0,10"
            	                    VerticalAlignment="Top">
                                <DatePicker.SelectedDate>
                                    <Binding Path="in_service_date" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DatePicker.SelectedDate>
                            </DatePicker>

                            <Label Content="Actief" />
                            <CheckBox Margin="5,0,0,10" Name="Cbox1" HorizontalAlignment="Left" IsChecked="{Binding active, Mode=TwoWay}"></CheckBox>

                            <Label Content="Datum uit dienst" />
                            <DatePicker Name="end_date" Width="250" HorizontalAlignment="Left"
            	                    Margin="5,0,0,10"
            	                    VerticalAlignment="Top">
                                <DatePicker.SelectedDate>
                                    <Binding Path="out_service_date" UpdateSourceTrigger="PropertyChanged"></Binding>
                            </DatePicker.SelectedDate>
                            </DatePicker>

                            <Label Content="Rol" />
                            <ComboBox Name="role" Width="250" HorizontalAlignment="Left"  Margin="5,0,0,10" DataContext="{Binding Employees, Source={StaticResource Locator}}" ItemsSource="{Binding RoleCollection, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" DisplayMemberPath="role1" SelectedValuePath="role1" SelectedValue="{Binding SelectedEmployee.role, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                <ComboBox.Text>
                                    <Binding Path="RoleCollection" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Content="Status" />
                            <ComboBox Name="status" Width="250" HorizontalAlignment="Left" Margin="5,0,0,10" DataContext="{Binding Employees, Source={StaticResource Locator}}" ItemsSource="{Binding StatusCollection, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" DisplayMemberPath="employee_status1" SelectedValuePath="employee_status1" SelectedValue="{Binding SelectedEmployee.employee_status, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                <ComboBox.Text>
                                    <Binding Path="StatusCollection" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>
                        </StackPanel>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" Margin="100,320,100,0">
                        <Label  Width="300" Height="50" VerticalAlignment="Top" DataContext="{Binding Employees, Source={StaticResource Locator}}" Content="{Binding Notification, Mode=TwoWay}"></Label>
                        <Button Width="120" DataContext="{Binding Employees, Source={StaticResource Locator}}" VerticalAlignment="Top" Command="{Binding SaveCommand}" Margin="240,0,10,0" Content="Opslaan">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=fname, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=lname, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=email, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=phone, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=start_date, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=pass, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=role, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=status, Path=(Validation.HasError)}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                        <Button Width="120" DataContext="{Binding Employees, Source={StaticResource Locator}}" VerticalAlignment="Top" Command="{Binding DeselectEmployeeCommand}" Margin="0,0,0,0" Content="Deselecteren"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</UserControl>