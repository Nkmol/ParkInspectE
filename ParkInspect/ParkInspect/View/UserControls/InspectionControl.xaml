<UserControl x:Class="ParkInspect.View.UserControls.InspectionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:validationRules="clr-namespace:ParkInspect.Model.ValidationRules"
             mc:Ignorable="d" 
             d:DesignHeight="382" d:DesignWidth="782"
             DataContext="{Binding Inspections, Source={StaticResource Locator}}" Width="982" Height="482">
    <Grid>
        <TabControl Width="982" Height="482">
            <TabItem Header="Overzicht">
                <StackPanel>
                    <DockPanel>
                        <TextBox Width="128" Margin="0,3" Text="{Binding ParkinglotFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="157" Margin="5,3,0,3" Text="{Binding StateFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="157" Margin="5,3,0,3" Text="{Binding DateFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="154" Margin="5,3,0,3" Text="{Binding DeadlineFIlter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Width="148" Margin="5,3,0,3" IsEnabled="False" HorizontalAlignment="Left"/>
                        <TextBox Width="195" Margin="5,3,0,3" IsEnabled="False"  Text="{Binding ClarificationFilter, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" />
                    </DockPanel>
                    <DataGrid Width="971" ItemsSource="{Binding InspectieCollection}"  SelectedItem="{Binding SelectedInspection}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="0,0,0,10" Height="431" >
                        <DataGrid.Columns>
                            <!-- removes parkeeplaats name after selection-->
                            <DataGridTextColumn Header="Parkeerplaats" Width="*" Binding="{Binding Parkinglot.name }" />
                            <DataGridTextColumn  Header="Status" Width="*" Binding="{Binding State1.state1}"/>
                            <DataGridTextColumn  Header="Aangemaakt" Width="*" Binding="{Binding date, StringFormat={}{0:dd/MM/yyyy}}"/>
                            <DataGridTextColumn  Header="Deadline" Width="*" Binding="{Binding deadline , StringFormat={}{0:dd/MM/yyyy}}"/>


                            <DataGridComboBoxColumn Width="*" Header="Inspecteurs" SelectedValueBinding="{Binding Employees}" IsReadOnly="False" />

                            <DataGridTextColumn  Header="Toelichting" Width="*" Binding="{Binding clarification}"/>


                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Management">
                <DockPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Width="327" VerticalAlignment="Top" Height="423">
                        <StackPanel Width="300" Height="623" VerticalAlignment="Top">

                            <Label Height="25" Margin="10,5,151,0" Content="Opdracht"  />
                            <ComboBox x:Name="Assignmentbox" Margin="10,0,57,0"  DisplayMemberPath="Client.name" ItemsSource="{Binding Assignmentlist}" SelectedItem="{Binding SelectedInspection.Asignment}" SelectionChanged="ComboBox_SelectionChanged" >
                                <ComboBox.Text>
                                    <Binding Path="SelectedInspection.Asignment.Client.name" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Height="25" Margin="10,5,151,0" Content="Parkeerplaats"  />
                            <ComboBox  x:Name="ParkinglotBox"  Margin="10,0,57,0"  DisplayMemberPath="name" SelectedItem="{Binding SelectedInspection.Parkinglot}" ItemsSource="{Binding ParkinglotList}">
                                <ComboBox.Text>
                                    <Binding Path="SelectedInspection.Parkinglot" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Height="30" Margin="10,5,151,0" Content="Vragenlijst"  />
                            <ComboBox x:Name="FormBox" Margin="10,0,57,0"  ItemsSource="{Binding ParkinglotList}" DisplayMemberPath="Form.Template.name" SelectedItem="{Binding SelectedInspection.Parkinglot}" >
                                <ComboBox.Text>
                                    <Binding Path="SelectedInspection.Form.Template.name" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>

                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Height="25" Margin="10,5,151,0" Content="Status"  />

                            <ComboBox x:Name="StatusBox" Height="25" Margin="10,0,57,0"  ItemsSource="{Binding InspectionStateList}" DisplayMemberPath="state1" SelectedItem="{Binding SelectedInspection.State1}" >
                                <ComboBox.Text>
                                    <Binding Path="SelectedInspection.state" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Height="27" Margin="10,5,151,0" Content="Vervolg op"  />
                            <ComboBox x:Name="FollowupBox" Margin="10,0,57,0"  ItemsSource="{Binding ParkinglotList}" DisplayMemberPath="name" SelectedItem="{Binding SelectedInspection.Parkinglot}" >
                                <ComboBox.Text>
                                    <Binding Path="SelectedInspection.Parkinglot" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>

                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>

                            <Label Height="25" Margin="10,0,151,0" Content="Date"  />
                            <DatePicker Margin="10,0,57,0"  Text="{Binding SelectedInspection.date, StringFormat={}{0:dd/MM/yyyy}}" IsEnabled="False"/>

                            <Label Height="25" Margin="10,5,151,0" Content="Deadline" />
                            <DatePicker x:Name="Deadlinepicker" Margin="10,0,57,0" DisplayDate="{Binding SelectedInspection.deadline, StringFormat={}{0:dd/MM/yyyy} , Mode=OneWay}" >
                                <DatePicker.SelectedDate>
                                    <Binding Path="SelectedInspection.deadline" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DatePicker.SelectedDate>
                            </DatePicker>


                            <Label Height="25" Margin="10,5,151,0" Content="Toelichting"  />
                            <TextBox Margin="10,0,57,0" Height="105" >
                                <TextBox.Text>
                                    <Binding Path="SelectedInspection.clarification" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validationRules:IsNotEmptyValidationRule ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Height="35" Foreground="Red" Content="{Binding CommandError}" FontSize="8"/>
                            <DockPanel Width="363" HorizontalAlignment="Left">

                                <Button  Margin="5,0" Content="Bewerken" Command="{Binding EditInspectionCommand}" Width="85" HorizontalAlignment="Left">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=Assignmentbox, Path=(Validation.HasError)}" Value="false" />
                                                        <Condition Binding="{Binding ElementName=ParkinglotBox, Path=(Validation.HasError)}" Value="false" />
                                                        <Condition Binding="{Binding ElementName=FormBox, Path=(Validation.HasError)}" Value="false" />
                                                        <Condition Binding="{Binding ElementName=StatusBox, Path=(Validation.HasError)}" Value="false" />
                                                        <Condition Binding="{Binding ElementName=FollowupBox, Path=(Validation.HasError)}" Value="false" />
                                                        <Condition Binding="{Binding ElementName=Deadlinepicker, Path=(Validation.HasError)}" Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="true" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                
                            </DockPanel>
                        </StackPanel>
                    </ScrollViewer>
                    <StackPanel Width="263"/>
                    <StackPanel>

                        <GroupBox x:Name="Inspecteurs" Header="Inspecteurs" Margin="0,5,0,0" Height="204" Width="363" HorizontalAlignment="Left">
                            <DataGrid ItemsSource="{Binding SelectedInspection.Employees}" SelectedItem="{Binding SelectedInspecteur}" DisplayMemberPath="firstname" AutoGenerateColumns="False" Margin="0,0,-2,0">
                                <DataGrid.Columns>

                                    <DataGridTextColumn Header="voornaam" Width="*" Binding="{Binding firstname}" />
                                    <DataGridTextColumn  Header="achternaam" Width="*" Binding="{Binding lastname}"/>
                                    <DataGridTextColumn  Header="email" Width="*" Binding="{Binding email}"/>

                                </DataGrid.Columns>
                            </DataGrid>

                        </GroupBox>

                        <StackPanel Height="7">
                        </StackPanel>
                        <DockPanel Width="363" HorizontalAlignment="Left">

                            <Button  Margin="5,0" Content="Toevoegen" Command="{Binding AddInspecteurCommand}" Width="125" HorizontalAlignment="Left"/>
                            <Button Margin="5,0" Content="Verwijderen" Width="88" Command="{Binding RemoveInspecteurCommand}" HorizontalAlignment="Left"/>

                        </DockPanel>
                        <Label Height="63" Foreground="Red" Content="{Binding CommandError}" FontSize="8"/>
                        <Button  Margin="0,0,5,0" Content="Leeg Scherm" Command="{Binding ResetCommand}" Width="111" HorizontalAlignment="Left"/>
                    </StackPanel>
                </DockPanel>

            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
